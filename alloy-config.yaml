apiVersion: v1
kind: ConfigMap
metadata:
  name: alloy-config
  namespace: logging
data:
  config.alloy: |
    logging {
      level  = "info"
      format = "logfmt"
    }

    loki.write "default" {
      endpoint {
        url = "http://loki-loki-distributed-gateway.logging.svc.cluster.local/loki/api/v1/push"
      }
      external_labels = {
        cluster = "my-k8s-cluster",
      }
    }

    // Discover and tail container logs from the node using the Kubernetes API.
    loki.source.kubernetes "container_logs" {
      forward_to = [loki.process.spring_logs.receiver]
    }

    loki.process "spring_logs" {
      forward_to = [loki.write.default.receiver]

      stage.match {
        selector = "{k8s_namespace_name=~\"dev.*|staging\"}"
        action   = "keep"
      }

      stage.match {
        selector = "{k8s_container_name=~\"visits-service|customers-service|vets-service|api-gateway|config-server|discovery-server|admin-server|genai-service\"}"
        action   = "keep"
      }

      // Parse structured JSON logs, common for Spring Boot.
      stage.json {
        expressions = { level = "level" }
        source      = "log"
      }

      stage.drop {
        source       = "log"
        expression   = ".*actuator/health.*"
      }

      // Rename Kubernetes labels to shorter names.
      stage.labelmap {
        mapping = {
          "k8s_pod_name"       = "pod",
          "k8s_namespace_name" = "namespace",
          "k8s_container_name" = "container",
        }
      }

      stage.labels {
        values = {
          job   = "spring-boot-logs",
          level = "level",
        }
      }

      stage.metrics {
        metric.counter {
          name        = "spring_logs_processed_total"
          description = "Total Spring Boot logs processed"
          action      = "inc"
        }
      }
    }
---
# DaemonSet and other resources remain the same
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: alloy
  namespace: logging
spec:
  selector:
    matchLabels:
      name: alloy
  template:
    metadata:
      labels:
        name: alloy
    spec:
      serviceAccountName: alloy
      containers:
        - name: alloy
          image: grafana/alloy:latest
          args:
            - run
            - /etc/alloy/config.alloy
            - --server.http.listen-addr=0.0.0.0:12345
          volumeMounts:
            - name: config
              mountPath: /etc/alloy
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
          ports:
            - containerPort: 12345
              name: http-metrics
          securityContext:
            runAsUser: 0
      volumes:
        - name: config
          configMap:
            name: alloy-config
        - name: varlog
          hostPath:
            path: /var/log
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
      tolerations:
        - operator: Exists
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alloy
  namespace: logging
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: alloy
rules:
  - apiGroups: [""]
    resources: ["pods", "nodes", "services", "endpoints"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes/proxy"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: alloy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: alloy
subjects:
  - kind: ServiceAccount
    name: alloy
    namespace: logging
